# Default values for bolt-diy.
# This is a YAML-formatted file.

replicaCount: 200

image:
  repository: bolt-ai
  tag: production
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 5173

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: bolt.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: bolt-tls
  #    hosts:
  #      - bolt.example.com

resources:
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 50
  maxReplicas: 250
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  NODE_ENV: production
  RUNNING_IN_DOCKER: "true"

# Secret environment variables (will be stored in a Kubernetes Secret)
secretEnv:
  GITHUB_ACCESS_TOKEN: ""
  VITE_GITHUB_ACCESS_TOKEN: ""
  OPENAI_API_KEY: ""
  ANTHROPIC_API_KEY: ""

# Configure the health check endpoint
livenessProbe:
  httpGet:
    path: /health
    port: 5173
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: 5173
  initialDelaySeconds: 5
  periodSeconds: 5